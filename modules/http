declare -A _HEADER
declare _GET
declare _POST
declare _METHOD
declare REQUEST_URI
declare HTTP_VERSION
declare -A URI_PARTS

function _html_append_post()
{
	local key=${1#*=}
	local value=${1%*=}
	_POST[$key]="$value"
}

function parse_request()
{

	local request
	read -s request

	url="${request#GET }"
	_HEADER["REQUEST_URI"]="${url% HTTP/*}"
	REQUEST_URI=${_HEADER["REQUEST_URI"]}
	HTTP_VERSION="${url#*HTTP/}"
	# echo ${_HEADER['REQUEST_URI']}
	_GET=${url#*?}
	_GET=$(echo $_GET|tr '&' "\n")

	while /bin/true; do
		local hdr
		read -s hdr
		[ "$hdr" == '' ] && break;
		hkey=${hdr%: *}
		hkey=${hkey^^[a-z]}
		hkey=${hkey//-/_}
		_HEADER[$hkey]="${hdr#*: }"
	done

	read -t 0 -s
	[ $? -eq 0 ] && read -s body || body=""
	parts=$(echo $body|tr '&' "\n")
	foreach _html_append_post $parts

	URI_PARTS=${REQUEST_URI%\?*}
	URI_PARTS=${REQUEST_URI#*/}
	URI_PARTS=$(echo $URI_PARTS|tr '/' "\n")
	unset url
}

function http_status()
{
	echo -e "HTTP/1.1 $1 $2"
}

function http_header()
{
	echo -e "$1: $2"
}

function http_redirect()
{
	http_header Location "$1"
}

function end_headers()
{
	echo -e ""
}

function http_content_type()
{
	local c=$((${#URI_PARTS[@]}-1))
	[ $c -ge 0 ] && http_header "Content-Type" $(http_get_mime ${URI_PARTS[$c]}) || http_header "Content-Type" "plain/text"
}

function http_content_html()
{
	http_header "Content-Type" "text/html"
}

function http_get_mime()
{
	case "$1" in
		""|*.htm?) echo "text/html";;
		*)
			local mapped_mime=$(get_mapped_mime_type "$1")
			[ -n $mapped_mime ] && echo $mapped_mime || echo "plain/text"
			;;
	esac
}

source $base/modules/http_answers
